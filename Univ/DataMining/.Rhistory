from reshape2 to re
t.test(a1,a2,paired=TRUE,alternative = "less",conf.level=0.99)
a1=a[,1]
a2=a[,2]
a=anorexia[56:72,2:3]
install.packages("PairedData")
library(PairedData)
anorexia
a=anorexia[56:72,2:3]
library(PairedData)
anorexia
a=anorexia[56:72,2:3]
a1=a[,1]
a2=a[,2]
t.test(a1,a2,paired=TRUE,alternative = "less",conf.level=0.99)
girl=c(3837,3334,2208,1745,2576,3208,3746,3523,3430,3480,3116,3428,2184,23853,3500,3866,3542,3278)
boy=c(3554,3838,3625,2846,3166,3520,3380,3294,3521,2902,2635,3920,3690,3783,3345,3034,3300,3428,4162,3630,3406,3402,3736,2121,3150)
var.test(girl,boy)
t.test(girl,boy,alternative = "two.sided",var.equal = TRUE)
install.packages("PairedData")
library(PairedData)
anorexia
a=anorexia[56:72,2:3]
a1=a[,1]
a2=a[,2]
t.test(a1,a2,paired=TRUE,alternative = "less",conf.level=0.99)
t.test(a1,a2,paired=TRUE,alternative = "two-sided",conf.level=0.99)
t.test(a1,a2,paired=TRUE,alternative = "two.sided",conf.level=0.99)
t.test(a1,a2,paired=TRUE,alternative = "greater",conf.level=0.99)
girl=c(3837,3334,2208,1745,2576,3208,3746,3523,3430,3480,3116,3428,2184,23853,3500,3866,3542,3278)
boy=c(3554,3838,3625,2846,3166,3520,3380,3294,3521,2902,2635,3920,3690,3783,3345,3034,3300,3428,4162,3630,3406,3402,3736,2121,3150)
var.test(girl,boy)
t.test(girl,boy,alternative = "two.sided",var.equal = TRUE)
?var.test
boy=c(3554,3838,3625,2846,3166,3520,3380,3294,
3521,2902,2635,3920,3690,3783,3345,3034,
3300,3428,4162,3630,3406,3402,3736,2121,3150)
girl=c(3837,3334,2208,1745,2576,3208,3746,3523,
3430,3480,3116,3428,2184,2383,3500,3866,
3542,3278)
var.test(girl,boy)
var.test(girl,boy)
t.test(girl,boy,alternative = "two.sided",var.equal = TRUE)
boy=c(3554,3838,3625,2846,3166,3520,3380,3294,
3521,2902,2635,3920,3690,3783,3345,3034,
3300,3428,4162,3630,3406,3402,3736,3370,2121,3150)
var.test(girl,boy)
t.test(girl,boy,alternative = "two.sided",var.equal = TRUE)
?leveneTEst
library("car")
library(car)
?leveneTest
leveneTest
leveneTest(y=mpg_high,group=origin,Center)
leveneTest
library("car")
library(MASS)
library(MASS)
a=Cars93
a=Cars93
library(MASS)
a=Cars93
data1=factor(a$AirBags)
data2=factor(a$Cylinders)
data_frame=data.frame(data1,data2)
df=table(data_frame)
chisq.test(df,correct = F)
library("car")
origin=factor(a$Origin)
mpg_high=a$MPG.highway
df2=data.frame(origin,mpg_high)
leveneTest(y=mpg_high,group=origin,Center=mean)
leveneTest(y=mpg_high,group=origin,Center=mean)
levene.Test(y=mpg_high,group=origin,Center=mean)
install.packages("lawstat")
levene.Test(y=mpg_high,group=origin,Center=mean)
anova(test)
library(MASS)
a=Cars93
data1=factor(a$AirBags)
data2=factor(a$Cylinders)
data_frame=data.frame(data1,data2)
df=table(data_frame)
chisq.test(df,correct = F)
origin=factor(a$Origin)
mpg_high=a$MPG.highway
df2=data.frame(origin,mpg_high)
df2
library(MASS)
a=Cars93
data1=factor(a$AirBags)
data2=factor(a$Cylinders)
data_frame=data.frame(data1,data2)
df=table(data_frame)
chisq.test(df,correct = F)
origin=factor(a$Origin)
mpg_high=a$MPG.highway
df2=data.frame(origin,mpg_high)
bartlett.test(mpg_high~origin,df2)
test=lm(mpg_high~origin,data=df2)
t.test(mpg_high~origin,alternative = "two.sided",var.equal=F)
df
a
df
data_frame=data.frame(data1,data2)
data_frame=data.frame(data1,data2)
data_frame
df
data1=factor(a$AirBags)
data2=factor(a$Cylinders)
data1=factor(a$AirBags)
data2=factor(a$Cylinders)
data_frame=data.frame(data1,data2)
df=table(data_frame)
chisq.test(df,correct = F)
lapply(dat,function(x) { sum(is.na(x))})
library(tidyverse)
library(gridExtra)
library(DataExplorer)
library(car)
library(nortest)
library(lmtest)
library(corrplot)
getwd()
setwd("C:\\Users\\An Tae-Hyun\\Desktop\\Pythonworkspace\\Univ\\DataMining")
dat<-read.csv(file = "CarPrice_Assignment.csv",header=T)
head(dat)
str(dat)
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
str(dat)
dat$cylindernumber=as.numeric(dat$cylindernumber)
dat$carbody=as.numeric(dat$carbody)
#symboling은 위험도 지수 -3~3까지
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$carbody=as.numeric(dat$carbody)
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
levels(dat$doornumber)=c(2,4)
dat$cylindernumber=as.numeric(dat$cylindernumber)
dat$symboling
summary(dat)
dat<-read.csv(file = "CarPrice_Assignment.csv",header=T)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
#symboling은 위험도 지수 -3~3까지
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
levels(dat$doornumber)=c(2,4)
dat$cylindernumber=as.numeric(dat$cylindernumber)
summary(dat)
dat<-read.csv(file = "CarPrice_Assignment.csv",header=T)
head(dat)
str(dat)
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
str(dat)
#symboling은 위험도 지수 -3~3까지
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
levels(dat$doornumber)=c(2,4)
summary(dat)
lapply(dat,function(x) { sum(is.na(x))})
num.col=sapply(dat,is.numeric)
dat2=dat[,num.cols]
dat2=dat[,num.col]
corrplot(cor(dat2),order="hclust",method="number")
corrplot(cor(dat2),method="number")
order="hclust",
corrplot(cor(dat2),order="hclust",method="number")
corrplot(cor(dat2),order="hclust",method="number")
corrplot(cor(dat2),method="number")
plot(dat)
corrplot(cor(dat2),method="number")
head(dat,8)
dat$cylindernumber=as.numeric(dat$cylindernumber)
summary(dat)
dat$cylindernumber
dat<-read.csv(file = "CarPrice_Assignment.csv",header=T)
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
#symboling은 위험도 지수 -3~3까지
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
dat$cylindernumber=as.numeric(dat$cylindernumber)
dat$cylindernumber
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
#symboling은 위험도 지수 -3~3까지
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
a=getwd()
a
setwd("C:\\Users\\An Tae-Hyun\\Desktop\\Pythonworkspace\\Univ\\DataMining")
dat<-read.csv(file = "CarPrice_Assignment.csv",header=T)
head(dat)
str(dat)
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
dat$cylindernumber=as.numeric(dat$cylindernumber)
dat$cylindernumber
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
dat$cylindernumber
levels(dat$cylindernumber)=c("8","5","4","6","3","12","2")
dat$cylindernumber
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
levels(dat$cylindernumber)=c("8","5","4","6","3","12","2")
dat$cylindernumber
dat$cylindernumber=as.numeric(as.character(dat$cylindernumber))
dat$cylindernumber
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
class(dat$cylindernumber)
levels(dat$cylindernumber)=c("8","5","4","6","3","12","2")
class(dat$cylindernumber)
dat$cylindernumber=as.character(dat$cylindernumber)
class(dat$cylindernumber)
dat$cylindernumber
levels(dat$cylindernumber)=c("8","5","4","6","3","12","2")
dat$cylindernumber=as.numeric(as.character(dat$cylindernumber))
dat$cylindernumber
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
levels(dat$cylindernumber)=c("8","5","4","6","3","12","2")
dat$cylindernumber=as.numeric(as.character(dat$cylindernumber))
dat$cylindernumber
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
dat1=dat
dat1$cylindernumber
l
l
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat1=dat
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
dat$cylindernumber
setwd("C:\\Users\\An Tae-Hyun\\Desktop\\Pythonworkspace\\Univ\\DataMining")
setwd("C:\\Users\\An Tae-Hyun\\Desktop\\Pythonworkspace\\Univ\\DataMining")
dat<-read.csv(file = "CarPrice_Assignment.csv",header=T)
head(dat)
str(dat)
summary(dat)
dat=subset(dat,select=c(symboling,fueltype,aspiration,doornumber,carbody,drivewheel, enginelocation
,wheelbase,carlength,carwidth,carheight,curbweight,enginetype,cylindernumber,enginesize
,fuelsystem,boreratio,stroke,compressionratio,horsepower,peakrpm,citympg,highwaympg,price))
#symboling은 위험도 지수 -3~3까지
dat[["fueltype"]]=as.factor(dat[["fueltype"]])
dat[["aspiration"]]=as.factor(dat[["aspiration"]])
dat[["doornumber"]]=as.factor(dat[["doornumber"]])
dat[["carbody"]]=as.factor(dat[["carbody"]])
dat[["drivewheel"]]=as.factor(dat[["drivewheel"]])
dat[["enginelocation"]]=as.factor(dat[["enginelocation"]])
dat[["enginetype"]]=as.factor(dat[["enginetype"]])
dat[["cylindernumber"]]=as.factor(dat[["cylindernumber"]])
dat[["fuelsystem"]]=as.factor(dat[["fuelsystem"]])
dat$cylindernumber
levels(dat$cylindernumber)=c(8,5,4,6,3,12,2)
dat$cylindernumber
levels(dat$cylindernumber)=c("8","5","4","6",'3',"12","2')
dat$cylindernumber=as.numeric(dat$cylindernumber)
dat$cylindernumber
levels(dat$doornumber)=c(2,4)
summary(dat)
lapply(dat,function(x) { sum(is.na(x))})
head(dat,8)
num.col=sapply(dat,is.numeric)
dat2=dat[,num.col]
corrplot(cor(dat2),method="number")
levels(dat$cylindernumber)=c("8","5","4","6",'3',"12","2')
dat$cylindernumber=as.numeric(dat$cylindernumber)
dat$cylindernumber
levels(dat$doornumber)=c(2,4)
summary(dat)
lapply(dat,function(x) { sum(is.na(x))})
head(dat,8)
num.col=sapply(dat,is.numeric)
dat2=dat[,num.col]
corrplot(cor(dat2),method="number")
levels(dat$cylindernumber)=c("8","5","4","6",'3',"12","2")
dat$cylindernumber
dat$cylindernumber=as.numeric(as.character(dat$cylindernumber))
dat$cylindernumber
summary(dat)
lapply(dat,function(x) { sum(is.na(x))})
num.col = sapply(dat, is.numeric)
dat2 = dat[, num.col]
corrplot(cor(dat2), method = "number")
pairs.pannel(dat2)
pairs.pannels(dat2)
pairs.panels(dat2)
pairs(dat2)
pairs.panel(dat2)
install.packages("psych")
library(psych)
pairs.panel(dat2)
pairs.panels(dat2)
pairs.panels(dat2,scale = TRUE)
summary(dat)
summary(dat2)
pairs.panels(dat)
pairs.panels(dat2)
corrplot(cor(dat2), method = "number")
pairs.panels(ctg, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
pairs.panels(dat3, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
cat.col = sapply(dat, !is.numeric)
dat3=dat[,cat.col]
pairs.panels(dat3, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
cat.col = sapply(dat, !is.factor)
cat.col = sapply(dat,!is.factor)
cat.col = sapply(dat,is.factor)
dat3=dat[,cat.col]
dat3
pairs.panels(dat3, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
chart.Correlation(dat3, histogram = T)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(dat3, histogram = T)
pairs.panels(dat3, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
#범주형 변수와 price사이의 상관성 파악
plt_fueltype=ggplot(data = dat,aes(x=fueltype,y=price,fill=fueltype),geom_boxplot())
plt_fueltype
#범주형 변수와 price사이의 상관성 파악
plt_fueltype=ggplot(data = dat,aes(x=fueltype,y=price,fill=fueltype))+geom_boxplot()
plt_fueltype
pairs.panels(dat3, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
#범주형 변수와 price사이의 상관성 파악
plt_fueltype=ggplot(data = dat,aes(x=fueltype,y=price,fill=fueltype))+geom_boxplot()
plt_aspiration=ggplot(data = dat,aes(x=aspiration,y=price,fill=aspiration))+geom_boxplot()
plt_doornumber=ggplot(data = dat,aes(x=doornumber,y=price,fill=doornumber))+geom_boxplot()
plt_carbody=ggplot(data = dat,aes(x=carbody,y=price,fill=carbody))+geom_boxplot()
plt_drivewheel=ggplot(data = dat,aes(x=drivewheel,y=price,fill=drivewheel))+geom_boxplot()
plt_enginelocation=ggplot(data = dat,aes(x=enginelocation,y=price,fill=enginelocation))+geom_boxplot()
plt_enginetype=ggplot(data = dat,aes(x=enginetype,y=price,fill=enginetype))+geom_boxplot()
plt_fuelsystem=ggplot(data = dat,aes(x=fuelsystem,y=price,fill=fuelsystem))+geom_boxplot()
plt_fueltype
plt_aspiration
plt_doornumber
plt_carbody
plt_drivewheel
plt_enginelocation
plt_enginetype
plt_fuelsystem
plt_fueltype
plt_aspiration
plt_doornumber
plt_carbody
plt_drivewheel
plt_enginelocation
plt_enginetype
plt_fuelsystem
plt_fueltype
plt_aspiration
plt_doornumber
plt_carbody
plt_carbody=ggplot(data = dat,aes(x=reorder(carbody,price),y=price,fill=carbody))+geom_boxplot()
plt_carbody
plt_drivewheel
plt_drivewheel=ggplot(data = dat,aes(x=reorder(drivewheel,price),y=price,fill=drivewheel))+geom_boxplot()
plt_drivewheel
plt_enginelocation
plt_enginetype
plt_enginetype=ggplot(data = dat,aes(x=reorder(enginetype,price),y=price,fill=enginetype))+geom_boxplot()
plt_enginetype
plt_fuelsystem=ggplot(data = dat,aes(x=fuelsystem,y=price,fill=fuelsystem))+geom_boxplot()
plt_fuelsystem
plt_fuelsystem=ggplot(data = dat,aes(x=reorder(fuelsystem,price),y=price,fill=fuelsystem))+geom_boxplot()
plt_fuelsystem
grid.arrange(ncol = 2, nrow = 4,plt_fueltype,plt_aspiration,plt_fuelsystem,
plt_doornumber,plt_carbody,plt_drivewheel,plt_enginelocation,plt_enginetype)
pairs.panels(dat3, method = "spearman", hist.col = "green", density = TRUE, ellipses = TRUE)
chart.Correlation(dat3, histogram = T)
corrplot(cor(dat2), method = "number")
cor(dat$highwaympg,dat$citympg)
plot_boxplot(dat,by="price")
plot_boxplot(dat,by="price",nrow=4)
grid.arrange(ncol = 2, nrow = 4,plt_fueltype,plt_aspiration,plt_fuelsystem,
plt_doornumber,plt_carbody,plt_drivewheel,plt_enginelocation,plt_enginetype)
